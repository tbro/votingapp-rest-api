---
openapi: 3.0.0
info:
  version: 0.8.0
  title: Votingapp Ledger REST API
  description: |
    This HTTP pragmatic REST API simplifies interacting with
    votingapp-ledger. Provides custom endpoints and functionality
    on top of sawtooth-rest-api specification in order to support
    more use-cases while preserving compatibility with sawtooth
    tooling.
paths:
  "/version":
    get:
      summary: Get version of rest-api
      responses:
        '200':
          description: Successufully retrieved version
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                type: string
                example: 0.1.0
  "/spec":
    get:
      summary: Get openapi specification of votingapp-ledger rest-api
      responses:
        '200':
          description: Successufully retrieved specification
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                type: string
                example: 0.1.0
  "/elections":
    get:
      summary: Get all elections
      parameters:
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved election data
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"

        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}":
    get:
      summary: Get data of election
      parameters:
      - "$ref": "#/components/parameters/electionId"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved election data
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/ballot-style-lists":
    get:
      summary: Get all ballot-style-lists
      parameters:
      - "$ref": "#/components/parameters/electionId"
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved ballot-style-lists
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/ballot-style-lists/{ballot_style_list_id}":
    get:
      summary: Get ballot-style-list
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - ballot_style_id:
          name: ballot_style_list_id
          in: path
          description: Id of ballot style list
          schema:
            type: string
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved ballot-style-list
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/cast-permissions":
    get:
      summary: Get all vote-permissions
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-permissions
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/Signature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"

                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/cast-permissions/{hdap_address}":
    get:
      summary: Get all vote-permissions
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-permissions
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/Signature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"

                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/authentication-records/{hdap_address}":
    get:
      summary: Get all vote-permissions
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-permissions
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/Signature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"

                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/ballot-style-receipts":
    get:
      summary: Get all ballot-style-receipts
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved ballot-style-receipts
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/Signature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/ballot-style-receipts/{hdap_address}":
    get:
      summary: Get data of ballot-style-receipt by extended address of ballot style receipt
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved ballot-style-receipt
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/Signature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/cast-vote-records":
    get:
      summary: Get all cast-vote-records
      parameters:
      - "$ref": "#/components/parameters/electionId"
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-vote-records
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/cast-vote-records/{hdapAddress}":
    get:
      summary: Get data of cast-vote-record by extended public key of the encrypted ledger record
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-vote-records
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/voter-receipts":
    get:
      summary: Get all voter-receipts
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved voter-receipts
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/voter-autographs":
    get:
      summary: Get data of voter-autographs(s)
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved data
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/voter-receipts/{hdap_address}":
    get:
      summary: Get data of voter-receipt by extended public key of the receipt record
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved voter-receipt
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
  "/elections/{election_id}/voter-autographs/{hdap_address}":
    get:
      summary: Get data of voter-autographs by extended public key of the encrypted ledger record
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved voter-autographs
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '400':
          "$ref": "#/components/responses/400BadRequest"
  "/elections/{election_id}/cast-vote-record-statuses":
    get:
      summary: Get data of cast vote record status(es)
      parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved cast-vote-record status
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DataPayload"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/elections/{election_id}/cast-vote-record-statuses/{hdap_address}":
    get:
    summary: Get data of cast vote record status by extended public key of the encrypted ledger record
    parameters:
        - "$ref": "#/components/parameters/electionId"
        - "$ref": "#/components/parameters/hdapAddress"
        - "$ref": "#/components/parameters/start"
        - "$ref": "#/components/parameters/limit"
        - "$ref": "#/components/parameters/reverse"
    responses:
    '200':
        description: Successfully retrieved cast vote record
        headers:
        signature:
            schema:
            "$ref": "#/components/schemas/ResponseSignature"
        date:
            schema:
            "$ref": "#/components/schemas/DateHeader"
        digest:
            schema:
            "$ref": "#/components/schemas/DigestHeader"
        va-signature-chain:
            schema:
            "$ref": "#/components/schemas/SignatureChain"
        content:
        "*/*":
            schema:
            properties:
                data:
                type: array
                items:
                    "$ref": "#/components/schemas/DataPayload"
                link:
                    "$ref": "#/components/schemas/Link"
                paging:
                    "$ref": "#/components/schemas/Paging"
        '404':
          "$ref": "#/components/responses/404NotFound"
  "/batches":
    post:
      summary: Sends a BatchList to the validator
      description: |
        Accepts a protobuf formatted `BatchList` as an octet-stream binary
        file and submits it to the validator to be committed.

        The API will return immediately with a status of `202`. There will be
        no `data` object, only a `link` to a `/batch_statuses` endpoint to be
        polled to check the status of submitted batches.
      parameters:
      - "$ref": "#/components/parameters/date"
      - "$ref": "#/components/parameters/digest"
      - "$ref": "#/components/parameters/signature-chain"
      - "$ref": "#/components/parameters/signature"
      requestBody:
        content:
          application/octet-stream:
            schema:
              "$ref": "#/components/schemas/BatchList"
        description: A binary encoded protobuf BatchList
        required: true
      responses:
        '202':
          description: Batches submitted for validation, but not yet committed
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '429':
          "$ref": "#/components/responses/429TooManyRequests"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
    get:
      summary: Fetches a list of batches
      description: 'Fetches a paginated list of batches from the validator.

        '
      parameters:
      - "$ref": "#/components/parameters/head"
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved batches
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Batch"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/batches/{batch_id}":
    parameters:
    - "$ref": "#/components/parameters/batch_id"
    get:
      summary: Fetches a particular batch
      responses:
        '200':
          description: Successfully retrieved batch
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/Batch"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '404':
          "$ref": "#/components/responses/404NotFound"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/batch_statuses":
    get:
      summary: Fetches the committed statuses for a set of batches
      description: |
        Fetches an array of objects with a status and id for each batch
        requested. There are four possible statuses with string values
        `'COMMITTED'`, `'INVALID'`, `'PENDING'`, and `'UNKNOWN'`.

        The batch(es) you want to check can be specified using the `id` filter
        parameter. If a `wait` time is specified in the URL, the API will wait
        to respond until all batches are committed, or the time in seconds has
        elapsed. If the value of `wait` is not set (i.e., `?wait&id=...`), or
        it is set to any non-integer value other than `false`, the wait time
        will be just under the API's specified timeout (usually 300).

        Note that because this route does not return full resources, the
        response will not be paginated, and there will be no `head` or
        `paging` properties.
      parameters:
      - name: id
        in: query
        description: A comma-separated list of batch ids
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/wait"
      responses:
        '200':
          description: Successfully retrieved statuses
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/BatchStatuses"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
    post:
      summary: Fetches the committed statuses for a set of batches
      description: |
        Identical to `GET /batch_statuses`, but takes ids of batches as a JSON
        formatted POST body rather than a query parameter. This allows for many
        more batches to be checked and should be used for more than 15 ids.

        Note that because query information is not encoded in the URL, no `link`
        will be returned with this query.
      parameters:
      - "$ref": "#/components/parameters/wait"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
        description: A JSON array of batch id strings
        required: true
      responses:
        '200':
          description: Successfully retrieved statuses
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/BatchStatuses"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/state":
    get:
      summary: Fetches the data for the current state
      description: |
        Fetches a paginated list of entries for the current state, or relative to a particular head block. Using the `address` filter parameter will narrow the list to any entries that have an address beginning with the characters specified.
        Note that the partial address in `address` parameter should have even  number of hexadecimal characters (i.e., complete bytes).
      parameters:
      - "$ref": "#/components/parameters/head"
      - name: address
        in: query
        description: A partial address to filter leaves by
        schema:
          type: string
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved state data
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Entry"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/state/{address}":
    parameters:
    - "$ref": "#/components/parameters/address"
    get:
      summary: Fetches a particular leaf from the current state
      description: "Takes full 70-character address and fetches a particular leaf.
        For partial address (i.e., group of leaves) use `/state` above. \n"
      parameters:
      - "$ref": "#/components/parameters/head"
      responses:
        '200':
          description: Successfully fetched leaves
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: string
                    format: byte
                    example: Zm9vOmJhcg==
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '404':
          "$ref": "#/components/responses/404NotFound"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/blocks":
    get:
      summary: Fetches a list of blocks
      description: 'Fetches a paginated list of blocks from the validator.

        '
      parameters:
      - "$ref": "#/components/parameters/head"
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved blocks
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Block"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/blocks/{block_id}":
    parameters:
    - "$ref": "#/components/parameters/block_id"
    get:
      summary: Fetches a particular block
      responses:
        '200':
          description: Successfully retrieved block
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/Block"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '404':
          "$ref": "#/components/responses/404NotFound"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/transactions":
    get:
      summary: Fetches a list of transactions
      description: 'Fetches a paginated list of transactions from the validator.

        '
      parameters:
      - "$ref": "#/components/parameters/head"
      - "$ref": "#/components/parameters/start"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/reverse"
      responses:
        '200':
          description: Successfully retrieved transactions
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Transaction"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
                  paging:
                    "$ref": "#/components/schemas/Paging"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/transactions/{transaction_id}":
    parameters:
    - "$ref": "#/components/parameters/transaction_id"
    get:
      summary: Fetches a particular transaction
      responses:
        '200':
          description: Successfully retrieved transaction
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/Block"
                  head:
                    "$ref": "#/components/schemas/Head"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '404':
          "$ref": "#/components/responses/404NotFound"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/receipts":
    get:
      summary: Fetches the receipts for a set of transactions
      description: |
        Fetches an array of objects for each receipt requested.

        The receipt(s) you want to retrieve can be specified using the `id`
        filter parameter, where `id` refers to the transaction id of the
        transaction the receipt is associated with.
      parameters:
      - name: id
        in: query
        description: A comma-separated list of transaction ids
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved transaction receipts
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/TransactionReceipts"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
    post:
      summary: Fetches the receipts for a set of transactions
      description: |
        Identical to `GET /receipts`, but takes ids of transactions as a JSON
        formatted POST body rather than a query parameter. This allows for many
        more receipts to be fetched and should be used with more than 15 ids.

        Note that because query information is not encoded in the URL, no `link`
        will be returned with this request.
      parameters:
      - "$ref": "#/components/parameters/wait"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
        description: A JSON array of transaction id strings
        required: true
      responses:
        '200':
          description: Successfully retrieved transaction receipts
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    "$ref": "#/components/schemas/TransactionReceipts"
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/peers":
    get:
      summary: Fetches the endpoints of the authorized peers of the validator
      parameters:
      responses:
        '200':
          description: Successfully retrieved peers
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: array
                    items:
                      type: string
                      example: tcp://12.345.67.890:8800
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
  "/status":
    get:
      summary: Fetches information pertaining to the status of the validator
      parameters:
      responses:
        '200':
          description: Successfully retrieved status
          headers:
            signature:
              schema:
                "$ref": "#/components/schemas/ResponseSignature"
            date:
              schema:
                "$ref": "#/components/schemas/DateHeader"
            digest:
              schema:
                "$ref": "#/components/schemas/DigestHeader"
            va-signature-chain:
              schema:
                "$ref": "#/components/schemas/SignatureChain"
          content:
            "*/*":
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      endpoint:
                        type: string
                        example: tcp://12.345.67.890:8800
                      peers:
                        type: array
                        items:
                          type: object
                          properties:
                            endpoint:
                              type: string
                              example: tcp://12.345.67.890:8800
                  link:
                    "$ref": "#/components/schemas/Link"
        '400':
          "$ref": "#/components/responses/400BadRequest"
        '500':
          "$ref": "#/components/responses/500ServerError"
        '503':
          "$ref": "#/components/responses/503ServiceUnavailable"
components:
  parameters:
    signature:
      in: header
      name: authorization
      schema:
        "$ref": "#/components/schemas/RequestSignature"
    date:
      in: header
      name: date
      schema:
        "$ref": "#/components/schemas/DateHeader"
    digest:
      in: header
      name: digest
      schema:
        "$ref": "#/components/schemas/DigestHeader"
    signature-chain:
      in: header
      name: va-signature-chain
      schema:
        "$ref": "#/components/schemas/SignatureChain"
    address:
      name: address
      in: path
      required: true
      description: Radix address of a leaf
      schema:
        type: string
    block_id:
      name: block_id
      in: path
      required: true
      description: Block id
      schema:
        type: string
    batch_id:
      name: batch_id
      in: path
      required: true
      description: Batch id
      schema:
        type: string
    transaction_id:
      name: transaction_id
      in: path
      required: true
      description: Transaction id
      schema:
        type: string
    head:
      name: head
      in: query
      description: Index or id of head block
      schema:
        type: string
        default: latest
    wait:
      name: wait
      in: query
      description: A time in seconds to wait for commit
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: Number of items to return
      schema:
        type: integer
        default: 1000
    start:
      name: start
      in: query
      description: Id to start paging (inclusive)
      schema:
        type: string
    reverse:
      name: reverse
      in: query
      description: If the list should be reversed
      schema:
        type: string
    id:
      name: id
      in: path
      description: Id of data object
      schema:
        type: string
    electionId:
      name: election_id
      in: path
      description: Id of election
      schema:
        type: string
    hdapAddress:
      name: hdap-address
      in: path
      description: Extended Public Key for HDAP-address
      schema:
        type: string
        example: xpub69d7o8V7sqmJ2q4yVjtJVAu7vTw3kPhXTgVDGdewqoSkJqDE9SGyzKmtDGqhWC4bSoFfLe8ZNiXgyVW6DzAAFYB5okedWexAJtW96f3Lv99
  responses:
    400BadRequest:
      description: Request was malformed
      headers:
        signature:
          schema:
            "$ref": "#/components/schemas/ResponseSignature"
        date:
          schema:
            "$ref": "#/components/schemas/DateHeader"
        digest:
          schema:
            "$ref": "#/components/schemas/DigestHeader"
        va-signature-chain:
          schema:
            "$ref": "#/components/schemas/SignatureChain"
      content:
        "*/*":
          schema:
            "$ref": "#/components/schemas/Error"
    404NotFound:
      description: Address or id did not match any resource
      headers:
        signature:
          schema:
            "$ref": "#/components/schemas/Signature"
      content:
        "*/*":
          schema:
            "$ref": "#/components/schemas/Error"
    429TooManyRequests:
      description: Too many requests have been made to process batches
      headers:
        signature:
          schema:
            "$ref": "#/components/schemas/ResponseSignature"
        date:
          schema:
            "$ref": "#/components/schemas/DateHeader"
        digest:
          schema:
            "$ref": "#/components/schemas/DigestHeader"
        va-signature-chain:
          schema:
            "$ref": "#/components/schemas/SignatureChain"
      content:
        "*/*":
          schema:
            "$ref": "#/components/schemas/Error"
    500ServerError:
      description: Something went wrong within the validator
      headers:
        signature:
          schema:
            "$ref": "#/components/schemas/ResponseSignature"
        date:
          schema:
            "$ref": "#/components/schemas/DateHeader"
        digest:
          schema:
            "$ref": "#/components/schemas/DigestHeader"
        va-signature-chain:
          schema:
            "$ref": "#/components/schemas/SignatureChain"
      content:
        "*/*":
          schema:
            "$ref": "#/components/schemas/Error"
    503ServiceUnavailable:
      description: API is unable to reach the validator
      headers:
        signature:
          schema:
            "$ref": "#/components/schemas/ResponseSignature"
        date:
          schema:
            "$ref": "#/components/schemas/DateHeader"
        digest:
          schema:
            "$ref": "#/components/schemas/DigestHeader"
        va-signature-chain:
          schema:
            "$ref": "#/components/schemas/SignatureChain"
      content:
        "*/*":
          schema:
            "$ref": "#/components/schemas/Error"
  schemas:
    Head:
      type: string
      example: 65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
    Link:
      type: string
      example: https://api.sawtooth.com/state?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
    Paging:
      properties:
        start:
          type: string
          example: 65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        limit:
          type: integer
          example: 54321
        next_position:
          type: string
          example: 65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        next:
          type: string
          example: https://api.sawtooth.com/state?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd&start=2000&limit=1000
    ResponseSignature:
      type: string
      description: Http signatures used to validate http and authorize the caller.
      example: 'keyId="RGfCWgw7k0ROmjEBCGy0JEHxDY5HYg+y7eKyXXm/9TI=",algorithm="ecdsa-sha384",headers="(request-target) date content-type digest",signature="MGUCMQD04yB6aBwN78pKIsjhM4XRbF1xWdwqUyx2rXWZeL6Znh2niA6mfRkFdUH4EyuKYvsCMG3W054q/DsUj1yJFhZxN4chuqR7M8AkBwnuLb4IvVwSYIa0U4QEIoVQ8ULJLJaFlQ=="'
    RequestSignature:
      type: string
      description: Http signatures used to validate http and authorize the caller.
      example: 'Signature keyId="RGfCWgw7k0ROmjEBCGy0JEHxDY5HYg+y7eKyXXm/9TI=",algorithm="ecdsa-sha384",headers="(request-target) date content-type digest",signature="MGUCMQD04yB6aBwN78pKIsjhM4XRbF1xWdwqUyx2rXWZeL6Znh2niA6mfRkFdUH4EyuKYvsCMG3W054q/DsUj1yJFhZxN4chuqR7M8AkBwnuLb4IvVwSYIa0U4QEIoVQ8ULJLJaFlQ=="'
    DateHeader:
      type: string
      description: RFC 2822 formated datetime of response
      example: 'Fri, 03 Feb 2023 16:44:24 +0000'
    DigestHeader:
      type: string
      description: Sha-256 digest of body
      example: 'SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE='
    SignatureChain:
      type: string
      description: Base64 encoded chain of trust
      example: 'X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE='
    Error:
      properties:
        code:
          type: integer
          example: 34
        title:
          type: string
          example: No Batches Submitted
        message:
          type: string
          example: 'The protobuf BatchList you submitted was empty and contained no
            Batches. You must submit at least one Batch.

            '
    BatchStatuses:
      type: array
      items:
        properties:
          id:
            type: string
            example: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
          status:
            type: string
            example: INVALID
            enum:
            - COMMITTED
            - INVALID
            - PENDING
            - UNKNOWN
          invalid_transactions:
            type: array
            items:
              properties:
                id:
                  type: string
                  example: 540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
                message:
                  type: string
                  example: Verb is \"inc\" but name \"foo\" not in state
                extended_data:
                  type: string
                  format: byte
                  example: ZXJyb3IgZGF0YQ==
    Entry:
      properties:
        address:
          type: string
          example: 1cf12650d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c
        data:
          type: string
          format: byte
          example: Zm9vOmJhcg==
    TransactionHeader:
      properties:
        batcher_public_key:
          type: string
          example: 02d260a46457a064733153e09840c322bee1dff34445d7d49e19e60abd18fd0758
        dependencies:
          type: array
          items:
            type: string
            example: 1baee350bdb60bcee60e3d325d43283cf830b4c23b2cb17d3bb43935bd7af3761c2bee79847c72a9e396a9ae58f48add4e43f94eb83f84442c6085c1dd5d4dbe
        family_name:
          type: string
          example: intkey
        family_version:
          type: string
          example: '1.0'
        inputs:
          type: array
          items:
            type: string
            example: 1cf12650d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c
        nonce:
          type: string
          example: QAApS4L
        outputs:
          type: array
          items:
            type: string
            example: 1cf12650d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c
        payload_sha512:
          type: string
          example: fb6135ef73f4fe77367f9384b3bbbb158f4b8603c9d612157108e5c271868fce2242ee4abd7a29397ba63780c3ccab13783dfd4d9f0167beda03cdb0e37b87f4
        signer_public_key:
          type: string
          example: '038bba5708acc262464c9fe30d3de9e905a9a5fa30cedd151dd9cd09ea26d46d00'
    Transaction:
      properties:
        header:
          "$ref": "#/components/schemas/TransactionHeader"
        header_signature:
          type: string
          example: 540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
        payload:
          type: string
          format: binary
    TransactionReceipt:
      properties:
        transaction_id:
          type: string
          example: 540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
        state_changes:
          type: array
          items:
            properties:
              type:
                type: string
                example: SET
              address:
                type: string
                example: 1cf12650d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c
              value:
                type: string
                format: binary
        events:
          type: array
          items:
            properties:
              event_type:
                type: string
                example: sawtooth/block-commit
              attributes:
                type: array
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
              data:
                type: string
                format: binary
        data:
          type: array
          items:
            type: string
            format: binary
    TransactionReceipts:
      type: array
      items:
        "$ref": "#/components/schemas/TransactionReceipt"
    BatchHeader:
      properties:
        signer_public_key:
          type: string
          example: '038bba5708acc262464c9fe30d3de9e905a9a5fa30cedd151dd9cd09ea26d46d00'
        transaction_ids:
          type: array
          items:
            type: string
            example: 540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
    Batch:
      properties:
        header:
          "$ref": "#/components/schemas/BatchHeader"
        header_signature:
          type: string
          example: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
        transactions:
          type: array
          items:
            "$ref": "#/components/schemas/Transaction"
    BatchList:
      properties:
        batches:
          type: array
          items:
            "$ref": "#/components/schemas/Batch"
    BlockHeader:
      properties:
        block_num:
          type: integer
          example: 12345
        previous_block_id:
          type: string
          example: 65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        signer_public_key:
          type: string
          example: 02d260a46457a064733153e09840c322bee1dff34445d7d49e19e60abd18fd0758
        batch_ids:
          type: array
          items:
            type: string
            example: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
        consensus:
          type: string
          format: binary
        state_root_hash:
          type: string
          example: 708ca7fbb701799bb387f2e50deaca402e8502abe229f705693d2d4f350e1ad6
    Block:
      properties:
        header:
          "$ref": "#/components/schemas/BlockHeader"
        header_signature:
          type: string
          example: 65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        batches:
          type: array
          items:
            "$ref": "#/components/schemas/Batch"
    DataPayload:
      properties:
        address:
          type: string
          example: 1cf12650d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c
        data:
          type: array
          items:
              type: object
          example: [{}]
